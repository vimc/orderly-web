/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.orderlyweb.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.orderlyweb.db.tables.ChangelogLabel;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChangelogLabelRecord extends UpdatableRecordImpl<ChangelogLabelRecord> implements Record2<String, Boolean> {

    private static final long serialVersionUID = -375645617;

    /**
     * Setter for <code>changelog_label.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>changelog_label.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>changelog_label.public</code>.
     */
    public void setPublic(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>changelog_label.public</code>.
     */
    public Boolean getPublic() {
        return (Boolean) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Boolean> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Boolean> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ChangelogLabel.CHANGELOG_LABEL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field2() {
        return ChangelogLabel.CHANGELOG_LABEL.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value2() {
        return getPublic();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChangelogLabelRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChangelogLabelRecord value2(Boolean value) {
        setPublic(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChangelogLabelRecord values(String value1, Boolean value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChangelogLabelRecord
     */
    public ChangelogLabelRecord() {
        super(ChangelogLabel.CHANGELOG_LABEL);
    }

    /**
     * Create a detached, initialised ChangelogLabelRecord
     */
    public ChangelogLabelRecord(String id, Boolean public_) {
        super(ChangelogLabel.CHANGELOG_LABEL);

        set(0, id);
        set(1, public_);
    }
}
