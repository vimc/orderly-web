/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.orderlyweb.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.orderlyweb.db.DefaultSchema;
import org.vaccineimpact.orderlyweb.db.Keys;
import org.vaccineimpact.orderlyweb.db.tables.records.DataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Data extends TableImpl<DataRecord> {

    private static final long serialVersionUID = 1814389085;

    /**
     * The reference instance of <code>data</code>
     */
    public static final Data DATA = new Data();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DataRecord> getRecordType() {
        return DataRecord.class;
    }

    /**
     * The column <code>data.hash</code>.
     */
    public final TableField<DataRecord, String> HASH = createField("hash", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>data.size_csv</code>.
     */
    public final TableField<DataRecord, Long> SIZE_CSV = createField("size_csv", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>data.size_rds</code>.
     */
    public final TableField<DataRecord, Long> SIZE_RDS = createField("size_rds", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>data</code> table reference
     */
    public Data() {
        this("data", null);
    }

    /**
     * Create an aliased <code>data</code> table reference
     */
    public Data(String alias) {
        this(alias, DATA);
    }

    private Data(String alias, Table<DataRecord> aliased) {
        this(alias, aliased, null);
    }

    private Data(String alias, Table<DataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DataRecord> getPrimaryKey() {
        return Keys.PK_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DataRecord>> getKeys() {
        return Arrays.<UniqueKey<DataRecord>>asList(Keys.PK_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Data as(String alias) {
        return new Data(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Data rename(String name) {
        return new Data(name, null);
    }
}
