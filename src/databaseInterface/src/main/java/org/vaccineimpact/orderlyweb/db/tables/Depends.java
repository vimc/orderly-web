/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.orderlyweb.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.orderlyweb.db.DefaultSchema;
import org.vaccineimpact.orderlyweb.db.Keys;
import org.vaccineimpact.orderlyweb.db.tables.records.DependsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Depends extends TableImpl<DependsRecord> {

    private static final long serialVersionUID = -1127003559;

    /**
     * The reference instance of <code>depends</code>
     */
    public static final Depends DEPENDS = new Depends();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DependsRecord> getRecordType() {
        return DependsRecord.class;
    }

    /**
     * The column <code>depends.id</code>.
     */
    public final TableField<DependsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>depends.report_version</code>.
     */
    public final TableField<DependsRecord, String> REPORT_VERSION = createField("report_version", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>depends.use</code>.
     */
    public final TableField<DependsRecord, Integer> USE = createField("use", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>depends.as</code>.
     */
    public final TableField<DependsRecord, String> AS = createField("as", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>depends.is_pinned</code>.
     */
    public final TableField<DependsRecord, Boolean> IS_PINNED = createField("is_pinned", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>depends.is_latest</code>.
     */
    public final TableField<DependsRecord, Boolean> IS_LATEST = createField("is_latest", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>depends</code> table reference
     */
    public Depends() {
        this("depends", null);
    }

    /**
     * Create an aliased <code>depends</code> table reference
     */
    public Depends(String alias) {
        this(alias, DEPENDS);
    }

    private Depends(String alias, Table<DependsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Depends(String alias, Table<DependsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DependsRecord> getPrimaryKey() {
        return Keys.PK_DEPENDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DependsRecord>> getKeys() {
        return Arrays.<UniqueKey<DependsRecord>>asList(Keys.PK_DEPENDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DependsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DependsRecord, ?>>asList(Keys.FK_DEPENDS_REPORT_VERSION_1, Keys.FK_DEPENDS_FILE_ARTEFACT_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Depends as(String alias) {
        return new Depends(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Depends rename(String name) {
        return new Depends(name, null);
    }
}
